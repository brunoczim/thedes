searchState.loadedDescShard("thedes_tui", 0, "This module provides colors that are usable with the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAdapts the brightness of the background color to match the …\nAdapts the brightness of the foreground color to match the …\nA trait for types that can approximate their brightness.\nBase of CMY colors (6).\n16 Basic colors.\nA basic color. Totals 16 colors. By far, the most portable …\nA basic color used by the terminal.\nBlack.\nThe brightness of a color.\nNumber of channels.\nNumber of channels.\n216 CMY colors.\nA CMY (Cyan-Magenta-Yellow) color. The lower one of its …\nA color usable in the terminal.\nAn 8-bit encoded color for the terminal.\nThe kind of a color. <code>enum</code> representation of an 8-bit color.\nA pair of colors (foreground and background).\nContrasts the brightness of the background color against …\nContrasts the brightness of the foreground color against …\nDark blue/blue.\nDark cyan/cyan.\nDark gray/light black.\nDark green/green.\nDark magenta/magenta.\nDark red/red.\nDark yellow/yellow.\nANSI 8-bit color. Totals 256 colors: 16 basic colors …\n24 Gray-scale colors.\nA gray-scale color. Goes from white, to gray, to black.\nHalf of maximum gray-scale brightness (gray).\nLight blue.\nLight cyan.\nLight gray/dark white.\nLight green.\nLight magenta.\nLight red.\nLight yellow.\nMaximum brightness (i.e. white).\nMaximum gray-scale brightness (white).\nMinimum brightness (i.e. dark).\nMinimum gray-scale brightness (0, black).\nA function that updates a [<code>Color2</code>].\nRGB color (Red-Green-Blue). Not very portable, but some …\nAn RGB color ((Red-Green-Blue)). This is an additive color …\nUpdates the background of a pair of colors ([<code>Color2</code>]) to …\nUpdates the foreground of a pair of colors ([<code>Color2</code>]) to …\nWhite\nApproximate the brightness of the color.\nThe background of this pair.\nCreates a color that is basic.\nThe blue channel of this RGB color. Higher values means …\nReturns the brightness of this color.\nCreates a color that is CMY.\nThe resulting code of the color.\nReturns the color code.\nThe level of cyan component.\nThe foreground of this pair.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a color that is gray-scale.\nThe green channel of this RGB color. Higher values means …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts to en <code>enum</code> representation.\nLevel of brightness. The lower the brightness, the darker …\nThe level of magenta component.\nReceives a pair of color and yields a new one.\nCreates a new <code>CmyColor</code> given its components.\nCreates a new gray-scale color given its brightness.\nJust a convenience method for creating color pairs with …\nThe red channel of this RGB color. Higher values means …\nSet the approximate brightness of the color.\nSets the cyan component.\nSets the magenta component.\nSets the yellow component.\nCreates a new <code>CmyColor</code> given its components. Returns an …\nCreates a new gray-scale color given its brightness. …\nLike <code>Self::set_approx_brightness</code> but takes and returns <code>self</code>\nLike <code>Self::set_approx_brightness</code> but takes and returns <code>self</code>\nThe level of yellow component.\nReturns the argument unchanged.\nReturns the argument unchanged.\nAn INFO dialong: just shows a message.\nThis module exports a simple input dialog and related …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn info dialog, with just an Ok option.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA dialog asking for user input, possibly filtered.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGeneric initialization. Should not be called directly, but …\nReturned when user cancels this action.\nAn item of a prompt about a dangerous action.\nMenu selection runner.\nReturned when user confirms this action.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe backspace key\nA regular, unicode character. E.g. <code>Key::Char(&#39;a&#39;)</code> or …\nThe delete key\nThe down arrow key.\nThe enter key. Preferred over <code>Char(&#39;\\n&#39;)</code>.\nThe escape key.\nA generic event type.\nA supported pressed key.\nUser pressed key.\nAn event fired by a key pressed by the user.\nThe left arrow key.\nUser pasted a string.\nAn event fired by the user pasting data.\nThe right arrow key.\nThe up arrow key.\nWhether alt is modifiying the key (pressed).\nWhether control is modifiying the key (pressed).\nData pasted by the user.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nKey pressed by the user.\nWhether shift is modifiying the key (pressed).\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")