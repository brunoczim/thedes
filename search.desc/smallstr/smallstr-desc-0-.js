searchState.loadedDescShard("smallstr", 0, "Implements <code>SmallString</code>, a <code>String</code>-like container for small …\nA draining iterator for <code>SmallString</code>.\nA possible error value when creating a <code>SmallString</code> from a …\nA <code>String</code>-like container that can store a small number of …\nReturns the slice of <code>[u8]</code> bytes that were attempted to …\nExtracts a string slice containing the entire string.\nReturns a mutable reference to the contents of the …\nExtracts a string slice containing the entire string.\nReturns the number of bytes this string can hold without …\nRemoves all contents of the string.\nEmpties the string and returns an iterator over its former …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstructs a new <code>SmallString</code> on the stack using UTF-8 …\nConstructs a new <code>SmallString</code> on the stack using the …\nConstruct a <code>SmallString</code> by copying data from a <code>&amp;str</code>.\nConstruct a <code>SmallString</code> by using an existing allocation.\nReallocates to set the new capacity to <code>new_cap</code>.\nThe maximum number of bytes this string can hold inline.\nInserts a <code>char</code> into this string at the given byte position.\nInserts a <code>&amp;str</code> into this string at the given byte position.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts the <code>SmallString</code> into a <code>Box&lt;str&gt;</code>, without …\nReturns the byte array that was attempted to convert into …\nConvert the <code>SmallString</code> into <code>A</code>, if possible. Otherwise, …\nConverts the <code>SmallString</code> into a <code>String</code>, without …\nReturns <code>true</code> if this string is empty.\nReturns the length of this string, in bytes.\nConstruct an empty string.\nRemoves the last character from this string and returns it.\nAppends the given <code>char</code> to the end of this string.\nAppends the given string slice to the end of this string.\nRemoves a <code>char</code> from this string at a byte position and …\nEnsures that this string’s capacity is at least …\nEnsures that this string’s capacity is <code>additional</code> bytes …\nRetains only the characters specified by the predicate.\nShrink the capacity of the string as much as possible.\nReturns <code>true</code> if the data has spilled into a separate …\nShorten the string, keeping the first <code>len</code> bytes.\nReturns the <code>Utf8Error</code> to get more details about the …\nConstruct an empty string with enough capacity …")